// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/azure-cli
{
	"name": "Learn Dapr Container",
	"dockerComposeFile": "docker-compose.yml",
	"service": "docker-in-docker",
	"workspaceFolder": "/workspace",

	// Uncomment the next line if you will use a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Use 'settings' to set *default* container specific settings.json values on container create. 
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash"
	},

	// Ensure Dapr is running on opening the container
	"postCreateCommand": "dapr init --network learn-dapr --slim",

	"mounts": [
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.azure,target=/root/.azure,type=bind",
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.kube,target=/root/.kube,type=bind"
	],

	// Use 'appPort' to create a container with published ports. If the port isn't working, be sure
	// your server accepts connections from all interfaces (0.0.0.0 or '*'), not just localhost.
	// "appPort": [], 

	"forwardPorts": [
		3500, 	// React app - Dapr
		3501, 	// Python app - Dapr
		3502, 	// Node app - Dapr
		3503, 	// Go app - Dapr
		3504, 	// C# app - Dapr
		4000, 	// Node app - Native
		5000, 	// Python app - Native
		6000, 	// Go app - Native
		7000, 	// C# app - Native
		8080, 	// React - Native
		7700    // Native C# App (No Dapr)
	],
	
	// Add the IDs of extensions you want installed when the container is created in the array below.
	"extensions": [
		"ms-dotnettools.csharp",
		"ms-vscode.azurecli",
		"ms-azuretools.vscode-docker",
		"ms-azuretools.vscode-dapr",
		"ms-azuretools.vscode-azureterraform",
		"ms-kubernetes-tools.vscode-kubernetes-tools",
		"hashicorp.terraform",
		"visualstudioexptteam.vscodeintellicode",
		"davidanson.vscode-markdownlint",
		"ms-mssql.mssql",
		"golang.go",
		"ms-python.python"
	]
}